{"version":3,"file":"component---src-pages-index-tsx.js","mappings":"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","sources":["webpack://coffee.log/./node_modules/gatsby-plugin-image/node_modules/camelcase/index.js","webpack://coffee.log/./src/components/Layout/Layout.tsx","webpack://coffee.log/../src/image-utils.ts","webpack://coffee.log/../src/components/hooks.ts","webpack://coffee.log/../src/components/picture.tsx","webpack://coffee.log/../src/components/placeholder.tsx","webpack://coffee.log/../src/components/main-image.tsx","webpack://coffee.log/../src/components/layout-wrapper.tsx","webpack://coffee.log/../src/components/gatsby-image.server.tsx","webpack://coffee.log/../src/components/static-image.server.tsx","webpack://coffee.log/./src/components/PostList.tsx","webpack://coffee.log/./src/pages/index.tsx"],"sourcesContent":["'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import * as React from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\n\ninterface iLayout {\n    pageTitle?: string\n    children: React.ReactNode\n}\n\nconst Layout = ({ pageTitle, children }: iLayout) => {\n    const data = useStaticQuery(graphql`\n        query {\n            site {\n                siteMetadata {\n                    title\n                }\n            }\n        }\n    `)\n    return (\n        <div>\n            <title>\n                {pageTitle} | {data.site.siteMetadata.title}\n            </title>\n            <header>{data.site.siteMetadata.title}</header>\n            <nav>\n                <ul>\n                    <li>\n                        <Link to=\"/\">Home</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/info\">About</Link>\n                    </li>\n                </ul>\n            </nav>\n            <main>\n                <h1>{pageTitle}</h1>\n                {children}\n            </main>\n            <footer>test2</footer>\n        </div>\n    )\n}\nexport default Layout\n","/* eslint-disable no-unused-expressions */\nimport { stripIndent } from \"common-tags\"\nimport camelCase from \"camelcase\"\nimport { IGatsbyImageData } from \".\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(stripIndent`\n    The requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* eslint-disable no-unused-expressions */\nimport {\n  useState,\n  CSSProperties,\n  useEffect,\n  HTMLAttributes,\n  ImgHTMLAttributes,\n  ReactEventHandler,\n  SetStateAction,\n  Dispatch,\n  RefObject,\n} from \"react\"\nimport { Node } from \"gatsby\"\nimport { PlaceholderProps } from \"./placeholder\"\nimport { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport {\n  IGatsbyImageHelperArgs,\n  generateImageData,\n  Layout,\n  EVERY_BREAKPOINT,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\nconst imageCache = new Set<string>()\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport function storeImageloaded(cacheKey?: string): void {\n  if (cacheKey) {\n    imageCache.add(cacheKey)\n  }\n}\n\nexport function hasImageLoaded(cacheKey: string): boolean {\n  return imageCache.has(cacheKey)\n}\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type FileNode = Node & {\n  childImageSharp?: IGatsbyImageDataParent<Node>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nexport type ImageDataLike = FileNode | IGatsbyImageDataParent | IGatsbyImageData\nexport const getImage = (node: ImageDataLike): IGatsbyImageData | undefined => {\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport async function applyPolyfill(\n  ref: RefObject<HTMLImageElement>\n): Promise<void> {\n  if (!(`objectFitPolyfill` in window)) {\n    await import(\n      // @ts-ignore typescript can't find the module for some reason ¯\\_(ツ)_/¯\n      /* webpackChunkName: \"gatsby-plugin-image-objectfit-polyfill\" */ `objectFitPolyfill`\n    )\n  }\n  ;(window as any).objectFitPolyfill(ref.current)\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  toggleLoaded?: (loaded: boolean) => void,\n  cacheKey?: string,\n  ref?: RefObject<HTMLImageElement>,\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  const onLoad: ReactEventHandler<HTMLImageElement> = function (e) {\n    if (isLoaded) {\n      return\n    }\n\n    storeImageloaded(cacheKey)\n\n    const target = e.currentTarget\n    const img = new Image()\n    img.src = target.currentSrc\n\n    if (img.decode) {\n      // Decode the image through javascript to support our transition\n      img\n        .decode()\n        .catch(() => {\n          // ignore error, we just go forward\n        })\n        .then(() => {\n          toggleLoaded(true)\n        })\n    } else {\n      toggleLoaded(true)\n    }\n  }\n\n  // Polyfill \"object-fit\" if unsupported (mostly IE)\n  if (ref?.current && !(`objectFit` in document.documentElement.style)) {\n    ref.current.dataset.objectFit = style.objectFit ?? `cover`\n    ref.current.dataset.objectPosition = `${style.objectPosition ?? `50% 50%`}`\n    applyPolyfill(ref)\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n    onLoad,\n    ref,\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport function useImageLoaded(\n  cacheKey: string,\n  loading: \"lazy\" | \"eager\",\n  ref: any\n): {\n  isLoaded: boolean\n  isLoading: boolean\n  toggleLoaded: Dispatch<SetStateAction<boolean>>\n} {\n  const [isLoaded, toggleLoaded] = useState(false)\n  const [isLoading, toggleIsLoading] = useState(loading === `eager`)\n\n  const rAF =\n    typeof window !== `undefined` && `requestAnimationFrame` in window\n      ? requestAnimationFrame\n      : function (cb: TimerHandler): number {\n          return setTimeout(cb, 16)\n        }\n  const cRAF =\n    typeof window !== `undefined` && `cancelAnimationFrame` in window\n      ? cancelAnimationFrame\n      : clearTimeout\n\n  useEffect(() => {\n    let interval: number\n    // @see https://stackoverflow.com/questions/44074747/componentdidmount-called-before-ref-callback/50019873#50019873\n    function toggleIfRefExists(): void {\n      if (ref.current) {\n        if (loading === `eager` && ref.current.complete) {\n          storeImageloaded(cacheKey)\n          toggleLoaded(true)\n        } else {\n          toggleIsLoading(true)\n        }\n      } else {\n        interval = rAF(toggleIfRefExists)\n      }\n    }\n    toggleIfRefExists()\n\n    return (): void => {\n      cRAF(interval)\n    }\n  }, [])\n\n  return {\n    isLoading,\n    isLoaded,\n    toggleLoaded,\n  }\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","/* eslint-disable filenames/match-regex */\nimport React, {\n  FunctionComponent,\n  ImgHTMLAttributes,\n  forwardRef,\n  LegacyRef,\n} from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n  innerRef: LegacyRef<HTMLImageElement>\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  innerRef,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n      ref={innerRef}\n    />\n  )\n}\n\nexport const Picture = forwardRef<HTMLImageElement, PictureProps>(\n  function Picture(\n    { fallback, sources = [], shouldLoad = true, ...props },\n    ref\n  ) {\n    const sizes = props.sizes || fallback?.sizes\n    const fallbackImage = (\n      <Image\n        {...props}\n        {...fallback}\n        sizes={sizes}\n        shouldLoad={shouldLoad}\n        innerRef={ref}\n      />\n    )\n\n    if (!sources.length) {\n      return fallbackImage\n    }\n\n    return (\n      <picture>\n        {sources.map(({ media, srcSet, type }) => (\n          <source\n            key={`${media}-${type}-${srcSet}`}\n            type={type}\n            media={media}\n            srcSet={shouldLoad ? srcSet : undefined}\n            data-srcset={!shouldLoad ? srcSet : undefined}\n            sizes={sizes}\n          />\n        ))}\n        {fallbackImage}\n      </picture>\n    )\n  }\n)\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React, { forwardRef } from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage = forwardRef<HTMLImageElement, MainImageProps>(\n  function MainImage(props, ref) {\n    return (\n      <>\n        <Picture ref={ref} {...props} />\n        <noscript>\n          <Picture {...props} shouldLoad={true} />\n        </noscript>\n      </>\n    )\n  }\n)\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path=\"../global.d.ts\" />\n\nimport React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer: string | null = null\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {\n          // eslint-disable-next-line no-undef\n          SERVER && <NativeScriptLoading />\n        }\n      </Fragment>\n    )\n  }\n","import React, {\n  ElementType,\n  FunctionComponent,\n  CSSProperties,\n  WeakValidationMap,\n} from \"react\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImageHydrator: FunctionComponent<{\n  as?: ElementType\n  style?: CSSProperties\n  className?: string\n}> = function GatsbyImageHydrator({ as: Type = `div`, children, ...props }) {\n  return <Type {...props}>{children}</Type>\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n    if (preactClass) {\n      className = preactClass\n    }\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return (\n      <GatsbyImageHydrator\n        {...wrapperProps}\n        as={as}\n        style={{\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        }}\n        className={`${wClass}${className ? ` ${className}` : ``}`}\n      >\n        <LayoutWrapper layout={layout} width={width} height={height}>\n          <Placeholder\n            {...getPlaceholderProps(\n              placeholder,\n              false,\n              layout,\n              width,\n              height,\n              placeholderBackgroundColor,\n              objectFit,\n              objectPosition\n            )}\n          />\n\n          <MainImage\n            data-gatsby-image-ssr=\"\"\n            className={imgClassName}\n            {...(props as Omit<MainImageProps, \"images\" | \"fallback\">)}\n            // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n            {...getMainProps(\n              loading === `eager`,\n              false,\n              cleanedImages,\n              loading,\n              undefined,\n              undefined,\n              undefined,\n              imgStyle\n            )}\n          />\n        </LayoutWrapper>\n      </GatsbyImageHydrator>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Link } from \"gatsby\"\n\nfunction PostList({ data }: any) {\n    return (\n        <article>\n            {data.allMdx.nodes.map((node: any) => {\n                return (\n                    <div key={node.id}>\n                        <h2>{node.frontmatter.title}</h2>\n                        <p>Posted: {node.frontmatter.date}</p>\n                        <Link to={`/${node.slug}/`}>go to</Link>\n                    </div>\n                )\n            })}\n        </article>\n    )\n}\n\nexport default PostList\n","import * as React from \"react\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport { graphql } from \"gatsby\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport * as mdStyles from \"../styles/md.module.scss\"\nimport { Helmet } from \"react-helmet\"\nimport PostList from \"../components/PostList\"\nimport Layout from \"../components/Layout/Layout\"\n\nconst pageStyles = {\n    color: \"#232129\",\n    padding: 96,\n    fontFamily: \"-apple-system, Roboto, sans-serif, serif\",\n}\nconst headingStyles = {\n    marginTop: 0,\n    marginBottom: 64,\n    maxWidth: 320,\n}\nconst headingAccentStyles = {\n    color: \"#663399\",\n}\nconst paragraphStyles = {\n    marginBottom: 48,\n}\nconst codeStyles = {\n    color: \"#8A6534\",\n    padding: 4,\n    backgroundColor: \"#FFF4DB\",\n    fontSize: \"1.25rem\",\n    borderRadius: 4,\n}\nconst listStyles = {\n    marginBottom: 96,\n    paddingLeft: 0,\n}\nconst listItemStyles = {\n    fontWeight: 300,\n    fontSize: 24,\n    maxWidth: 560,\n    marginBottom: 30,\n}\n\nconst linkStyle = {\n    color: \"#8954A8\",\n    fontWeight: \"bold\",\n    fontSize: 16,\n    verticalAlign: \"5%\",\n}\n\nconst docLinkStyle = {\n    ...linkStyle,\n    listStyleType: \"none\",\n    marginBottom: 24,\n}\n\nconst descriptionStyle = {\n    color: \"#232129\",\n    fontSize: 14,\n    marginTop: 10,\n    marginBottom: 0,\n    lineHeight: 1.25,\n}\n\nconst docLink = {\n    text: \"TypeScript Documentation\",\n    url: \"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\",\n    color: \"#8954A8\",\n}\n\nconst badgeStyle = {\n    color: \"#fff\",\n    backgroundColor: \"#088413\",\n    border: \"1px solid #088413\",\n    fontSize: 11,\n    fontWeight: \"bold\",\n    letterSpacing: 1,\n    borderRadius: 4,\n    padding: \"4px 6px\",\n    display: \"inline-block\",\n    position: \"relative\" as \"relative\",\n    top: -2,\n    marginLeft: 10,\n    lineHeight: 1,\n}\n\n// data\nconst links = [\n    {\n        text: \"Tutorial\",\n        url: \"https://www.gatsbyjs.com/docs/tutorial/\",\n        description:\n            \"A great place to get started if you're new to web development. Designed to guide you through setting up your first Gatsby site.\",\n        color: \"#E95800\",\n    },\n    {\n        text: \"How to Guides\",\n        url: \"https://www.gatsbyjs.com/docs/how-to/\",\n        description:\n            \"Practical step-by-step guides to help you achieve a specific goal. Most useful when you're trying to get something done.\",\n        color: \"#1099A8\",\n    },\n    {\n        text: \"Reference Guides\",\n        url: \"https://www.gatsbyjs.com/docs/reference/\",\n        description:\n            \"Nitty-gritty technical descriptions of how Gatsby works. Most useful when you need detailed information about Gatsby's APIs.\",\n        color: \"#BC027F\",\n    },\n    {\n        text: \"Conceptual Guides\",\n        url: \"https://www.gatsbyjs.com/docs/conceptual/\",\n        description:\n            \"Big-picture explanations of higher-level Gatsby concepts. Most useful for building understanding of a particular topic.\",\n        color: \"#0D96F2\",\n    },\n    {\n        text: \"Plugin Library\",\n        url: \"https://www.gatsbyjs.com/plugins\",\n        description:\n            \"Add functionality and customize your Gatsby site or app with thousands of plugins built by our amazing developer community.\",\n        color: \"#8EB814\",\n    },\n    {\n        text: \"Build and Host\",\n        url: \"https://www.gatsbyjs.com/cloud\",\n        badge: true,\n        description:\n            \"Now you’re ready to show the world! Give your Gatsby site superpowers: Build and host on Gatsby Cloud. Get started for free!\",\n        color: \"#663399\",\n    },\n]\n\n// markup\nconst IndexPage = ({ data }: any) => {\n    return (\n        <>\n            <Helmet>\n                <title>coffee.log</title>\n\n                <meta\n                    httpEquiv=\"Content-Type\"\n                    content=\"text/html;charset=UTF-8\"\n                />\n            </Helmet>\n            <Layout pageTitle=\"coffee.log\">\n                <main style={pageStyles}>\n                    <title>Home Page</title>\n                    {/* {data.allMdx.nodes.map((node: any) => (\n                        <article key={node.id} className={mdStyles.test}>\n                            <h2>{node.frontmatter.title}</h2>\n                            <p>Posted: {node.frontmatter.date}</p>\n                            <MDXRenderer>{node.body}</MDXRenderer>\n                        </article>\n                    ))} */}\n                    <StaticImage\n                        alt=\"Clifford, a reddish-brown pitbull, posing on a couch and looking stoically at the camera\"\n                        src=\"../images/icon.png\"\n                    />\n                    <PostList data={data} />\n                    <h1 style={headingStyles}>\n                        Congratulations\n                        <br />\n                        <span style={headingAccentStyles}>\n                            — you just made a Gatsby site!{\" \"}\n                        </span>\n                        🎉🎉🎉\n                    </h1>\n                    <p style={paragraphStyles}>\n                        Edit <code style={codeStyles}>src/pages/index.tsx</code>{\" \"}\n                        to see this page update in real-time. 😎\n                    </p>\n                    <ul style={listStyles}>\n                        <li style={docLinkStyle}>\n                            <a\n                                style={linkStyle}\n                                href={`${docLink.url}?utm_source=starter&utm_medium=ts-docs&utm_campaign=minimal-starter-ts`}\n                            >\n                                {docLink.text}\n                            </a>\n                        </li>\n                        {links.map((link) => (\n                            <li\n                                key={link.url}\n                                style={{ ...listItemStyles, color: link.color }}\n                            >\n                                <span>\n                                    <a\n                                        style={linkStyle}\n                                        href={`${link.url}?utm_source=starter&utm_medium=start-page&utm_campaign=minimal-starter-ts`}\n                                    >\n                                        {link.text}\n                                    </a>\n                                    {link.badge && (\n                                        <span\n                                            style={badgeStyle}\n                                            aria-label=\"New Badge\"\n                                        >\n                                            NEW!\n                                        </span>\n                                    )}\n                                    <p style={descriptionStyle}>\n                                        {link.description}\n                                    </p>\n                                </span>\n                            </li>\n                        ))}\n                    </ul>\n                    <img\n                        alt=\"Gatsby G Logo\"\n                        src=\"data:image/svg+xml,%3Csvg width='24' height='24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M12 2a10 10 0 110 20 10 10 0 010-20zm0 2c-3.73 0-6.86 2.55-7.75 6L14 19.75c3.45-.89 6-4.02 6-7.75h-5.25v1.5h3.45a6.37 6.37 0 01-3.89 4.44L6.06 9.69C7 7.31 9.3 5.63 12 5.63c2.13 0 4 1.04 5.18 2.65l1.23-1.06A7.959 7.959 0 0012 4zm-8 8a8 8 0 008 8c.04 0 .09 0-8-8z' fill='%23639'/%3E%3C/svg%3E\"\n                    />\n                </main>\n            </Layout>\n        </>\n    )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n    query {\n        allMdx(sort: { fields: frontmatter___date, order: DESC }) {\n            nodes {\n                frontmatter {\n                    title\n                    date(formatString: \"MMMM DD, YYYY\")\n                }\n                id\n                body\n                slug\n            }\n        }\n    }\n`\n"],"names":["preserveCamelCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","length","character","test","toUpperCase","slice","toLowerCase","camelCase","input","options","Array","isArray","TypeError","Object","assign","pascalCase","postProcess","x","charAt","map","trim","filter","join","hasUpperCase","replace","_","p1","m","module","exports","default","React","Link","useStaticQuery","Layout","pageTitle","children","data","site","siteMetadata","title","to","DEFAULT_PIXEL_DENSITIES","DEFAULT_BREAKPOINTS","EVERY_BREAKPOINT","warn","message","console","sortNumeric","a","b","getSrcSet","images","image","src","width","formatFromFilename","filename","dot","lastIndexOf","ext","setDefaultDimensions","args","layout","height","sourceMetadata","breakpoints","aspectRatio","formats","u","format","Math","round","getLowResolutionImageURL","generateImageSource","fit","_generateImageSource","generateImageData","pluginName","reporter","backgroundColor","placeholderURL","Error","Set","size","has","add","imageSizes","imgDimensions","erroneousUserDimensions","entries","dim","outputPixelDensities","densities","dedupeAndSortDensities","calculated","getDimensionsAndAspectRatio","originalWidth","fixedDimension","stripIndent","sizes","density","presentationWidth","presentationHeight","unscaledWidth","fixedImageSizes","responsiveImageSizes","calculateImageSizes","result","sources","getSizes","forEach","imageSrc","Boolean","unscaled","find","img","fallback","srcSet","push","type","imageProps","placeholder","values","from","concat","sort","min","includes","dimensions","imageAspectRatio","widthOption","Number","MAX_SAFE_INTEGER","heightOption","max","gatsbyImageIsInstalled","GATSBY___IMAGE","getImage","node","_node$images","_node$images$fallback","isGatsbyImageData","gatsbyImageData","isGatsbyImageDataParent","childImageSharp","_node$childImageSharp","getSrc","_getImage","_getImage$images","_getImage$images$fall","_getImage2","_getImage2$images","_getImage2$images$fal","getImageData","baseUrl","urlBuilder","sourceWidth","sourceHeight","props","_breakpoints","withArtDirection","defaultImage","artDirected","output","media","process","env","NODE_ENV","source","Image","loading","alt","shouldLoad","innerRef","decoding","undefined","ref","Picture","forwardRef","r","o","fallbackImage","key","propTypes","PropTypes","isRequired","bool","displayName","exact","arrayOf","oneOfType","Placeholder","_Picture$propTypes","propName","componentName","MainImage","NativeScriptLoading","dangerouslySetInnerHTML","__html","Sizer","style","paddingTop","maxWidth","display","role","position","LayoutWrapper","Fragment","removeNewLines","str","GatsbyImageHydrator","as","Type","GatsbyImage","className","preactClass","imgClassName","imgStyle","objectFit","objectPosition","placeholderBackgroundColor","wrapperStyle","overflow","verticalAlign","getWrapperProps","wStyle","wClass","wrapperProps","cleanedImages","isLoaded","top","left","bottom","right","opacity","transition","getPlaceholderProps","isLoading","toggleLoaded","cacheKey","transform","willChange","onLoad","e","target","currentTarget","currentSrc","decode","then","getMainProps","StaticImage","imageData","__imageData","__error","_getStaticImage","GatsbyImageServer","checkDimensionProps","number","validLayouts","PostList","allMdx","nodes","id","frontmatter","date","slug","Helmet","pageStyles","color","padding","fontFamily","headingStyles","marginTop","marginBottom","headingAccentStyles","paragraphStyles","codeStyles","fontSize","borderRadius","listStyles","paddingLeft","listItemStyles","fontWeight","linkStyle","docLinkStyle","listStyleType","descriptionStyle","lineHeight","docLink","text","url","badgeStyle","border","letterSpacing","marginLeft","links","description","badge","IndexPage","httpEquiv","content","href","link","query"],"sourceRoot":""}